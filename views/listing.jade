extends layout

block content
  .container
    .row
        .col-5
            img.img-thumbnail(src=listing.file)
        .col
            img.rounded-circle.mr-2(src="http://placekitten.com/50/50")
            span.h6= listing.user.name
            hr
            h1= listing.shortdesc
            span.listing-price.h2.text-secondary= "$" + listing.price
            p.mt-3= listing.longdesc
            .row
                i.ml-3.material-icons location_on
                p#address= listing.address
            .row
                .col
                    - each tag in listing.tags
                        span.rounded.bg-white.text-muted.text-monospace.mx-1.px-2.py-1= tag
            hr
            .row
                a.btn.btn-primary.mx-3(href="#") Message Seller
                if (user && user.id == listing.user.id)
                    a.btn.btn-outline-primary.mr-3(href="/listings/edit/" + listing.id) Edit
                    form(action="/listings/delete/"+listing.id +"?_method=DELETE" method="POST")
                        button.btn.btn-outline-danger(type="submit") Delete
    .row
        .col
            link(rel='stylesheet', href='https://cdn.rawgit.com/openlayers/openlayers.github.io/master/en/v5.3.0/css/ol.css', type='text/css')
            style.
                .map {
                height: 400px;
                width: 100%;
                }
            script(src='https://cdn.rawgit.com/openlayers/openlayers.github.io/master/en/v5.3.0/build/ol.js')

            #map.mt-4(tabindex='0')
            script(src='https://unpkg.com/openlayers@4.4.2')
            script(src='https://unpkg.com/ol-popup@2.0.0')
            script(type='text/javascript').
                (function (win, doc) {
                    
                    //Geocoding
                    var address = $("#address").text();
                    var lat = 0;
                    var lon = 0;
                    var geojson = {};
                    fetch("https://nominatim.openstreetmap.org/search?format=json&polygon_geojson=1&q="+address).then(function(response) {
                        return response.json();
                    }).then(function(json) {
                        console.log(json[0].lat);
                        lat = parseFloat(json[0].lat);
                        lon = parseFloat(json[0].lon);
                        geojson = json[0].geojson;
                    }).then(function() {
                        console.log(geojson["coordinates"]);
                        var polygon = new ol.geom.Polygon([geojson["coordinates"]]);
                        
                        var feature = new ol.Feature(polygon);
                        // Create vector source and the feature to it.
                        var vectorSource = new ol.source.Vector();
                        vectorSource.addFeature(feature);
                        // Create vector layer attached to the vector source.
                        var vectorLayer = new ol.layer.Vector({
                            source: vectorSource
                        });
                        var olview = new ol.View({
                            center: ol.proj.fromLonLat([lon, lat]),
                            zoom: 17,
                            minZoom: 2,
                            maxZoom: 20
                        });
                        var baseLayer = new ol.layer.Tile({
                            source: new ol.source.OSM()
                        });
                        var map = new ol.Map({
                            target: doc.getElementById('map'),
                            view: olview,
                            layers: [baseLayer, vectorLayer]
                        });
                        //map.getView().setCenter([40, -73]);
                        console.log(map.getView().getCenter());
                    })
                })(window, document);